!function(e){var t={};function i(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,i),r.l=!0,r.exports}i.m=e,i.c=t,i.d=function(e,t,n){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)i.d(n,r,function(t){return e[t]}.bind(null,r));return n},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="./",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);i(1);var n=document.querySelector(".wrapper>div"),r=function(e){var t=this,i=function(){function e(e){var t=e.type,i=void 0===t?"range":t,n=e.range,r=void 0===n?100:n,s=e.start,o=void 0===s?0:s,l=e.end,u=void 0===l?null:l,h=e.origin,d=void 0===h?0:h,a=e.step,c=void 0===a?1:a;this.type=i,this._start=Math.max(o-d,0),this._end=null===u?r:u-d,this.range=r,this.origin=d,this.step=c,this.value=[this.start+this.origin,this.end+this.origin]}return Object.defineProperty(e.prototype,"start",{get:function(){return this._start},set:function(e){this._start=Math.min(this.end,Math.max(e,0))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this._end},set:function(e){this._end=Math.max(this.start,Math.min(e,this.range))},enumerable:!1,configurable:!0}),e.prototype.update=function(e){var t=e.startPrc,i=void 0===t?this.start:t,n=e.endPrc,r=void 0===n?this.end:n,s=e.direct;if(void 0!==s&&s)this._end=100/this.range*(r-this.origin),this._start=100/this.range*(i-this.origin);else{var o=this.range/100*i,l=this.range/100*r;(l-this.end>=.7*this.step||this.end-l>=.7*this.step||l==this.range)&&(this.end=Math.round(l/this.step)*this.step),(o-this.start>=.7*this.step||this.start-o>=.7*this.step||0==o)&&(this.start=Math.round(o/this.step)*this.step)}this.value=[this.start+this.origin,this.end+this.origin],this.updated(100/this.range*this.start,100/this.range*this.end)},e}(),n=function(){function e(){}return e.prototype.shiftReac=function(e){this.callToModel(e)},e.prototype.updateReact=function(e,t){this.callToView(e,t)},e}(),r=function(){function e(e){var i=e.orient,n=void 0===i?"horizontal":i,r=e.range,s=void 0===r?100:r,o=e.origin,l=void 0===o?0:o,u=e.start,h=void 0===u?0:u,d=e.end,a=void 0===d?null:d,c=e.tumblerSize,m=void 0===c?"16px":c,f=e.tumblerColor,g=void 0===f?"darkblue":f,p=e.tumblerRoundness,b=void 0===p?"50%":p,v=e.tumblerBorders,y=void 0===v?"none":v,_=e.lineHeight,S=void 0===_?"12px":_,M=e.lineColor,R=void 0===M?"blue":M,P=e.lineRoundness,w=void 0===P?"10px":P;e.selectedBackGround;this.LineClass=function(e){var t=e.height,i=void 0===t?"12px":t,n=e.color,r=void 0===n?"blue":n,s=e.roundness,o=void 0===s?"10px":s;this.height=i,this.color=r,this.roundness=o},this.TumblerClass=function(){function e(e){var t=e.size,i=void 0===t?"16px":t,n=e.color,r=void 0===n?"darkblue":n,s=e.roundness,o=void 0===s?"50%":s;e.borders;this.html='<span ondragstart="return false;" ondrop="return false;" class=\'RangeSlider__tumbler\n                            \'> </span>',this.size=i,this.color=r,this.roundness=o}return e.prototype.tumblerListener=function(e){var i=this;t.onmousemove=function(n){var r=e.target,s=t.querySelector(".RangeSlider"),o=(n.clientX-s.getBoundingClientRect().x)/s.getBoundingClientRect().width*100;r.nextSibling?i.tumblerShifted({startPrc:o}):i.tumblerShifted({endPrc:o})},document.onmouseup=function(e){t.onmousemove=null,document.onmouseup=null}},e}(),this.element,this.orient=n,this.range=s,this.origin=l,this.start=Math.max(h-l,0),this.end=null===a?s:a-l,this.tumbler=new this.TumblerClass({size:m,color:g,roundness:b,borders:y}),this.tumbler.tumblerListener=this.tumbler.tumblerListener.bind(this),this.line=new this.LineClass({height:S,color:R,roundness:w})}return e.prototype.render=function(){var e=this;return t.innerHTML="<div class='RangeSlider RangeSlider_orient_"+this.orient+"'><div class='RangeSlider__line'>"+this.tumbler.html+this.tumbler.html+"</div>  <div class='RangeSlider__meaning'></div> </div></div>",this.element=t.querySelector(".RangeSlider"),this.line.element=this.element.querySelector(".RangeSlider__line"),this.tumbler.elements=this.element.querySelectorAll(".RangeSlider__tumbler"),this.tumbler.elements.forEach((function(t){var i=t;i.style.height=e.tumbler.size,i.style.width=e.tumbler.size,i.style.background=e.tumbler.color,i.style.borderRadius=e.tumbler.roundness,i.style.border=e.tumbler.borders,i.style.transform="translateX(-50%)",i.style.marginTop="calc((-"+e.tumbler.size+" + "+e.line.height+")/2)",i.onmousedown=function(t){e.tumbler.tumblerListener(t)}})),this.line.element.style.height=this.line.height,this.line.element.style.background=this.line.color,this.line.element.style.borderRadius=this.line.roundness,this.viewUpdate(100/this.range*this.start,100/this.range*this.end),this.element},e.prototype.viewUpdate=function(e,t){this.element.querySelector(".RangeSlider__tumbler:first-child").style.left=e+"%",this.element.querySelector(".RangeSlider__tumbler:last-child").style.left=t+"%"},e}();return{Model:new i(e),Presenter:new n,View:new r(e),init:function(){this.View.tumblerShifted=this.Presenter.shiftReac.bind(this.Presenter),this.Presenter.callToModel=this.Model.update.bind(this.Model),this.Model.updated=this.Presenter.updateReact.bind(this.Presenter),this.Presenter.callToView=this.View.viewUpdate.bind(this.View),this.View.render()},getValue:function(){return console.log("Selected range: "+this.Model.value[0]+" â€” "+this.Model.value[1]),this.Model.value},setValue:function(e,t){this.Presenter.shiftReac({startPrc:e/this.Model.range*100,endPrc:t/this.Model.range*100,direct:!0})}}}.call(n,{type:"range",start:20,end:80,step:5});r.init(),r.getValue()},function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,