!function(e){var t={};function i(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,r){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(i.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(r,n,function(t){return e[t]}.bind(null,n));return r},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="./",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);i(1);var r=document.querySelector(".wrapper>div"),n=function(e){var t=this,i=function(){function e(e){var t=e.type,i=void 0===t?"range":t,r=e.range,n=void 0===r?100:r,s=e.start,o=void 0===s?0:s,a=e.end,l=void 0===a?null:a,u=e.origin,d=void 0===u?0:u,h=e.step,c=void 0===h?1:h;this.type=i,this._start=Math.max(o-d,0),this._end=null===l?n:l-d,this.range=n,this.origin=d,this.step=c,this.value=[this.start+this.origin,this.end+this.origin]}return Object.defineProperty(e.prototype,"start",{get:function(){return this._start},set:function(e){this._start=Math.min(this.end,Math.max(e,0))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"end",{get:function(){return this._end},set:function(e){this._end=Math.max(this.start,Math.min(e,this.range))},enumerable:!1,configurable:!0}),e.prototype.update=function(e){var t=e.startPrc,i=void 0===t?this.start:t,r=e.endPrc,n=void 0===r?this.end:r,s=e.direct;if(void 0!==s&&s)this._end=this.range/100*n,this._start=this.range/100*i;else{var o=this.range/100*i,a=this.range/100*n;(a-this.end>=.7*this.step||this.end-a>=.7*this.step||a==this.range)&&(this.end=Math.round(a/this.step)*this.step),(o-this.start>=.7*this.step||this.start-o>=.7*this.step||0==o)&&(this.start=Math.round(o/this.step)*this.step,console.log(i,this.start))}this.value=[this.start+this.origin,this.end+this.origin],this.updated(100/this.range*this.start,100/this.range*this.end)},e}(),r=function(){function e(){}return e.prototype.shiftReac=function(e){this.callToModel(e)},e.prototype.updateReact=function(e,t){this.callToView(e,t)},e}(),n=function(){function e(e){var i=e.orient,r=void 0===i?"horizontal":i,n=e.range,s=void 0===n?100:n,o=e.origin,a=void 0===o?0:o,l=e.start,u=void 0===l?0:l,d=e.end,h=void 0===d?null:d,c=e.tumblerSize,g=void 0===c?"16px":c,p=e.tumblerBackground,f=void 0===p?"darkblue":p,b=e.tumblerRadius,m=void 0===b?"50%":b,v=e.lineHeight,y=void 0===v?"12px":v,_=e.lineBackground,S=void 0===_?"blue":_,R=(e.selectedBackGround,e.lineRadius),M=void 0===R?"10px":R;this.root=t,this.orient=r,this.range=s,this.origin=a,this.start=Math.max(u-a,0),this.end=null===h?s:h-a,this.tumbler={tumblerSize:g,tumblerBackground:f,tumblerRadius:m},this.line={lineHeight:y,lineBackground:S,lineRadius:M}}return e.prototype.tumblerListener=function(e){var i=this;t.onmousemove=function(r){var n=e.target,s=t.querySelector(".RangeSlider"),o=(r.clientX-s.getBoundingClientRect().x)/s.getBoundingClientRect().width*100;n.classList.contains("RangeSlider__tumbler_type_main")?i.tumblerShifted({startPrc:o}):i.tumblerShifted({endPrc:o})},document.onmouseup=function(e){t.onmousemove=null,document.onmouseup=null}},e.prototype.render=function(){var e=this;this.root.innerHTML="<div class='RangeSlider RangeSlider_orient_"+this.orient+"'><div class='RangeSlider__line'>   <span ondragstart=\"return false;\" ondrop=\"return false;\" class='RangeSlider__tumbler_type_main RangeSlider__tumbler'>\n                                    </span> <span ondragstart=\"return false;\" ondrop=\"return false;\" class='RangeSlider__tumbler'></span>   </div>  <div class='RangeSlider__meaning'></div> </div></div>",this.root.querySelectorAll(".RangeSlider__tumbler").forEach((function(t){var i=t;i.style.height=e.tumbler.tumblerSize,i.style.width=e.tumbler.tumblerSize,i.style.background=e.tumbler.tumblerBackground,i.style.borderRadius=e.tumbler.tumblerRadius,i.style.transform="translateX(-50%)",i.style.marginTop="calc((-"+e.tumbler.tumblerSize+" + "+e.line.lineHeight+")/2)",i.onmousedown=e.tumblerListener.bind(e)}));var i=t.querySelector(".RangeSlider__line");return i.style.height=this.line.lineHeight,i.style.background=this.line.lineBackground,i.style.borderRadius=this.line.lineRadius,this.viewUpdate(100/this.range*this.start,100/this.range*this.end),t.querySelector(".RangeSlider")},e.prototype.viewUpdate=function(e,t){this.root.querySelector(".RangeSlider__tumbler_type_main").style.left=e+"%",this.root.querySelector(".RangeSlider__tumbler:last-child").style.left=t+"%"},e}();return{Model:new i(e),Presenter:new r,View:new n(e),init:function(){this.View.tumblerShifted=this.Presenter.shiftReac.bind(this.Presenter),this.Presenter.callToModel=this.Model.update.bind(this.Model),this.Model.updated=this.Presenter.updateReact.bind(this.Presenter),this.Presenter.callToView=this.View.viewUpdate.bind(this.View),this.View.render()},getValue:function(){return console.log("Selected range: "+this.Model.value[0]+" â€” "+this.Model.value[1]),this.Model.value},setValue:function(e,t){this.Presenter.shiftReac({startPrc:e/this.Model.range*100,endPrc:t/this.Model.range*100,direct:!0})}}}.call(r,{type:"range",start:20,end:80,step:5});n.init(),n.getValue()},function(e,t,i){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL21haW4udHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJlbGVtIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2xpZGVyIiwib3B0aW9ucyIsInJvb3QiLCJ0aGlzIiwiY2xNb2RlbCIsInR5cGUiLCJyYW5nZSIsInN0YXJ0IiwiZW5kIiwib3JpZ2luIiwic3RlcCIsIl9zdGFydCIsIk1hdGgiLCJtYXgiLCJfZW5kIiwicHJjIiwibWluIiwidXBkYXRlIiwic3RhcnRQcmMiLCJlbmRQcmMiLCJkaXJlY3QiLCJuZXdTdGFydCIsIm5ld0VuZCIsInJvdW5kIiwiY29uc29sZSIsImxvZyIsInVwZGF0ZWQiLCJDbFByZXNlbnRlciIsInNoaWZ0UmVhYyIsInBhcmFtcyIsImNhbGxUb01vZGVsIiwidXBkYXRlUmVhY3QiLCJmaXJDb29yIiwic2VjQ29vciIsImNhbGxUb1ZpZXciLCJjbFZpZXciLCJvcmllbnQiLCJ0dW1ibGVyU2l6ZSIsInR1bWJsZXJCYWNrZ3JvdW5kIiwidHVtYmxlclJhZGl1cyIsImxpbmVIZWlnaHQiLCJsaW5lQmFja2dyb3VuZCIsInNlbGVjdGVkQmFja0dyb3VuZCIsImxpbmVSYWRpdXMiLCJ0dW1ibGVyIiwibGluZSIsInR1bWJsZXJMaXN0ZW5lciIsImUiLCJvbm1vdXNlbW92ZSIsImV2IiwidGFyZ2V0IiwiYmlhcyIsImNsaWVudFgiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ4Iiwid2lkdGgiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsInR1bWJsZXJTaGlmdGVkIiwib25tb3VzZXVwIiwicmVuZGVyIiwiaW5uZXJIVE1MIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJlbCIsInN0eWxlIiwiaGVpZ2h0IiwiYmFja2dyb3VuZCIsImJvcmRlclJhZGl1cyIsInRyYW5zZm9ybSIsIm1hcmdpblRvcCIsIm9ubW91c2Vkb3duIiwidmlld1VwZGF0ZSIsImZpclBvcyIsInNlY1BvcyIsImxlZnQiLCJNb2RlbCIsIlByZXNlbnRlciIsIlZpZXciLCJpbml0IiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSJdLCJtYXBwaW5ncyI6ImFBQ0UsSUFBSUEsRUFBbUIsR0FHdkIsU0FBU0MsRUFBb0JDLEdBRzVCLEdBQUdGLEVBQWlCRSxHQUNuQixPQUFPRixFQUFpQkUsR0FBVUMsUUFHbkMsSUFBSUMsRUFBU0osRUFBaUJFLEdBQVksQ0FDekNHLEVBQUdILEVBQ0hJLEdBQUcsRUFDSEgsUUFBUyxJQVVWLE9BTkFJLEVBQVFMLEdBQVVNLEtBQUtKLEVBQU9ELFFBQVNDLEVBQVFBLEVBQU9ELFFBQVNGLEdBRy9ERyxFQUFPRSxHQUFJLEVBR0pGLEVBQU9ELFFBS2ZGLEVBQW9CUSxFQUFJRixFQUd4Qk4sRUFBb0JTLEVBQUlWLEVBR3hCQyxFQUFvQlUsRUFBSSxTQUFTUixFQUFTUyxFQUFNQyxHQUMzQ1osRUFBb0JhLEVBQUVYLEVBQVNTLElBQ2xDRyxPQUFPQyxlQUFlYixFQUFTUyxFQUFNLENBQUVLLFlBQVksRUFBTUMsSUFBS0wsS0FLaEVaLEVBQW9Ca0IsRUFBSSxTQUFTaEIsR0FDWCxvQkFBWGlCLFFBQTBCQSxPQUFPQyxhQUMxQ04sT0FBT0MsZUFBZWIsRUFBU2lCLE9BQU9DLFlBQWEsQ0FBRUMsTUFB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S3lFLE1BQU05RixNQUFNLEdBQUUsTUFBTXFCLEtBQUt5RSxNQUFNOUYsTUFBTSxJQUNsRXFCLEtBQUt5RSxNQUFNOUYsT0FFdEJtRyxTQUFBLFNBQVMxRSxFQUFjQyxHQUNuQkwsS0FBSzBFLFVBQVVqRCxVQUFVLENBQUNWLFNBQVVYLEVBQU1KLEtBQUt5RSxNQUFNdEUsTUFBUSxJQUFLYSxPQUFRWCxFQUFJTCxLQUFLeUUsTUFBTXRFLE1BQU0sSUFBS2MsUUFBUSxPQVE5RnBELEtBQUs2QixFQUFNLENBQUNRLEtBQU0sUUFBUUUsTUFBTSxHQUFJQyxJQUFNLEdBQUlFLEtBQU0sSUFFOUVWLEVBQU8rRSxPQUVQL0UsRUFBT2dGLFkiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiLi9cIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDApO1xuIiwiaW1wb3J0IHsgRnVuY3Rpb25CYXNlIH0gZnJvbSBcImxvZGFzaFwiO1xyXG5pbXBvcnQgXCIuL21haW4uc2Nzc1wiXHJcblxyXG5mdW5jdGlvbiBDcmVhdGVTbGlkZXIob3B0aW9uczpvYmplY3QpeyAgXHJcbiAgICBjb25zdCByb290ID0gdGhpcyBhcyBIVE1MRWxlbWVudFxyXG4gICAgXHJcbiAgICBsZXQgY2xNb2RlbCA9IGNsYXNze1xyXG4gICAgICAgIHR5cGU6IHN0cmluZztcclxuICAgICAgICBwcml2YXRlIF9zdGFydDogbnVtYmVyO1xyXG4gICAgICAgIHByaXZhdGUgX2VuZDogbnVtYmVyO1xyXG4gICAgICAgIHJhbmdlOiBudW1iZXI7XHJcbiAgICAgICAgb3JpZ2luOiBudW1iZXI7XHJcbiAgICAgICAgc3RlcDpudW1iZXI7XHJcbiAgICAgICAgdmFsdWU6IEFycmF5PG51bWJlcj47XHJcbiAgICAgICAgc2V0IHN0YXJ0KHByYzpudW1iZXIpe1xyXG4gICAgICAgICAgICB0aGlzLl9zdGFydCA9IE1hdGgubWluKHRoaXMuZW5kLCBNYXRoLm1heChwcmMsIDApIClcclxuICAgICAgICB9XHJcbiAgICAgICAgZ2V0IHN0YXJ0KCl7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9zdGFydFxyXG4gICAgICAgIH1cclxuICAgICAgICBzZXQgZW5kKHByYzpudW1iZXIpe1xyXG4gICAgICAgICAgICB0aGlzLl9lbmQgPSBNYXRoLm1heCh0aGlzLnN0YXJ0LCBNYXRoLm1pbihwcmMsIHRoaXMucmFuZ2UpIClcclxuICAgICAgICB9XHJcbiAgICAgICAgZ2V0IGVuZCgpe1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5fZW5kXHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgdXBkYXRlZDogRnVuY3Rpb247XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3RydWN0b3Ioe3R5cGU9IFwicmFuZ2VcIiwgcmFuZ2UgPSAxMDAsICBzdGFydCA9IDAsIGVuZD1udWxsLCBvcmlnaW4gPSAwLCBzdGVwPTF9KXtcclxuICAgICAgICAgICAgdGhpcy50eXBlID0gdHlwZVxyXG4gICAgICAgICAgICB0aGlzLl9zdGFydCA9IE1hdGgubWF4KHN0YXJ0IC0gb3JpZ2luLCAwKVxyXG4gICAgICAgICAgICB0aGlzLl9lbmQgPSAoZW5kID09PSBudWxsID8gcmFuZ2UgOiAoZW5kLW9yaWdpbikpXHJcbiAgICAgICAgICAgIHRoaXMucmFuZ2UgPSByYW5nZVxyXG4gICAgICAgICAgICB0aGlzLm9yaWdpbiA9IG9yaWdpblxyXG4gICAgICAgICAgICB0aGlzLnN0ZXAgPSBzdGVwXHJcbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBbdGhpcy5zdGFydCArIHRoaXMub3JpZ2luLCB0aGlzLmVuZCArIHRoaXMub3JpZ2luXVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcbiAgICAgICAgdXBkYXRlKHtzdGFydFByYz10aGlzLnN0YXJ0LCBlbmRQcmM9dGhpcy5lbmQsIGRpcmVjdD1mYWxzZX0pOnZvaWR7XHJcbiAgICAgICAgICAgIGlmKGRpcmVjdCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbmQgPSB0aGlzLnJhbmdlLzEwMCplbmRQcmNcclxuICAgICAgICAgICAgICAgIHRoaXMuX3N0YXJ0ID10aGlzLnJhbmdlLzEwMCpzdGFydFByYyBcclxuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIGxldCBuZXdTdGFydCA9IHRoaXMucmFuZ2UvMTAwKnN0YXJ0UHJjXHJcbiAgICAgICAgICAgICAgICBsZXQgbmV3RW5kID0gdGhpcy5yYW5nZS8xMDAqZW5kUHJjXHJcbiAgICAgICAgICAgICAgICBpZigobmV3RW5kIC0gdGhpcy5lbmQpID49IHRoaXMuc3RlcCowLjcgfHwgKHRoaXMuZW5kIC0gbmV3RW5kKSA+PSB0aGlzLnN0ZXAqMC43IHx8IG5ld0VuZD09dGhpcy5yYW5nZSl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbmQgPSBNYXRoLnJvdW5kKG5ld0VuZC90aGlzLnN0ZXApKnRoaXMuc3RlcFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYoKG5ld1N0YXJ0IC0gdGhpcy5zdGFydCkgPj0gdGhpcy5zdGVwKjAuNyB8fCAodGhpcy5zdGFydCAtIG5ld1N0YXJ0KSA+PSB0aGlzLnN0ZXAqMC43IHx8IG5ld1N0YXJ0PT0wKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnN0YXJ0ID0gTWF0aC5yb3VuZChuZXdTdGFydC90aGlzLnN0ZXApKnRoaXMuc3RlcFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHN0YXJ0UHJjLCB0aGlzLnN0YXJ0KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICBcclxuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IFt0aGlzLnN0YXJ0ICsgdGhpcy5vcmlnaW4sIHRoaXMuZW5kICsgdGhpcy5vcmlnaW5dXHJcbiAgICAgICAgICAgIHRoaXMudXBkYXRlZCgxMDAvdGhpcy5yYW5nZSp0aGlzLnN0YXJ0LCAxMDAvdGhpcy5yYW5nZSp0aGlzLmVuZClcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIGxldCBDbFByZXNlbnRlciA9IGNsYXNze1xyXG4gICAgICAgIGNhbGxUb01vZGVsOiBGdW5jdGlvbjtcclxuICAgICAgICBjYWxsVG9WaWV3OiBGdW5jdGlvbjtcclxuICAgICAgICBjb25zdHJ1Y3RvcigpeyBcclxuICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICBzaGlmdFJlYWMocGFyYW1zOiBvYmplY3Qpe1xyXG4gICAgICAgICAgICB0aGlzLmNhbGxUb01vZGVsKHBhcmFtcylcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHVwZGF0ZVJlYWN0KGZpckNvb3I6bnVtYmVyLCBzZWNDb29yOm51bWJlcil7XHJcbiAgICAgICAgICAgIHRoaXMuY2FsbFRvVmlldyhmaXJDb29yLCBzZWNDb29yKVxyXG5cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGNsVmlldyA9IGNsYXNze1xyXG4gICAgICAgIG9yaWdpbjogbnVtYmVyO1xyXG4gICAgICAgIHNpemU6IG51bWJlcjtcclxuICAgICAgICByYW5nZTogbnVtYmVyO1xyXG4gICAgICAgIHJvb3Q6IEhUTUxFbGVtZW50O1xyXG4gICAgICAgIG9yaWVudDogc3RyaW5nO1xyXG4gICAgICAgIHN0YXJ0Om51bWJlcjtcclxuICAgICAgICBlbmQ6IG51bWJlcjtcclxuXHJcbiAgICAgICAgdHVtYmxlcjoge3R1bWJsZXJTaXplOnN0cmluZzt0dW1ibGVyQmFja2dyb3VuZDpzdHJpbmc7dHVtYmxlclJhZGl1czpzdHJpbmd9XHJcbiAgICAgICAgbGluZToge2xpbmVIZWlnaHQ6IHN0cmluZztsaW5lQmFja2dyb3VuZDogc3RyaW5nOyBsaW5lUmFkaXVzOiBzdHJpbmd9XHJcblxyXG4gICAgICAgIHR1bWJsZXJTaGlmdGVkOiBGdW5jdGlvbjtcclxuXHJcbiAgICAgICAgY29uc3RydWN0b3Ioe29yaWVudCA9IFwiaG9yaXpvbnRhbFwiLCByYW5nZSA9IDEwMCwgb3JpZ2luID0gMCwgc3RhcnQgPSAwLCBlbmQgPSBudWxsLCB0dW1ibGVyU2l6ZT1cIjE2cHhcIiwgdHVtYmxlckJhY2tncm91bmQ9XCJkYXJrYmx1ZVwiLCBcclxuICAgICAgICAgICAgICAgICAgICB0dW1ibGVyUmFkaXVzPVwiNTAlXCIsIGxpbmVIZWlnaHQ9XCIxMnB4XCIsIGxpbmVCYWNrZ3JvdW5kPVwiYmx1ZVwiLCBzZWxlY3RlZEJhY2tHcm91bmQ9XCJibHVlXCIsIGxpbmVSYWRpdXM9XCIxMHB4XCJ9KXtcclxuICAgICAgICAgICAgdGhpcy5yb290ID0gcm9vdFxyXG4gICAgICAgICAgICB0aGlzLm9yaWVudCA9IG9yaWVudFxyXG4gICAgICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2VcclxuICAgICAgICAgICAgdGhpcy5vcmlnaW4gPSBvcmlnaW5cclxuICAgICAgICAgICAgdGhpcy5zdGFydCA9IE1hdGgubWF4KHN0YXJ0IC0gb3JpZ2luLCAwKVxyXG4gICAgICAgICAgICB0aGlzLmVuZCA9IChlbmQgPT09IG51bGwgPyByYW5nZSA6IChlbmQtb3JpZ2luKSlcclxuICAgICAgICAgICAgdGhpcy50dW1ibGVyID0ge3R1bWJsZXJTaXplOiB0dW1ibGVyU2l6ZSx0dW1ibGVyQmFja2dyb3VuZDp0dW1ibGVyQmFja2dyb3VuZCx0dW1ibGVyUmFkaXVzOnR1bWJsZXJSYWRpdXN9XHJcbiAgICAgICAgICAgIHRoaXMubGluZSA9IHtsaW5lSGVpZ2h0OiBsaW5lSGVpZ2h0LGxpbmVCYWNrZ3JvdW5kOiBsaW5lQmFja2dyb3VuZCwgbGluZVJhZGl1czogbGluZVJhZGl1c31cclxuICAgIFxyXG4gICAgICAgIH1cclxuICAgICAgICB0dW1ibGVyTGlzdGVuZXIoZTogTW91c2VFdmVudCk6IHZvaWR7XHJcbiAgICAgICAgICAgIHJvb3Qub25tb3VzZW1vdmUgPSBldj0+e1xyXG4gICAgICAgICAgICAgICAgbGV0IHR1bWJsZXIgPSA8SFRNTEVsZW1lbnQ+ZS50YXJnZXQ7XHJcbiAgICAgICAgICAgICAgICBsZXQgbGluZT0gcm9vdC5xdWVyeVNlbGVjdG9yKFwiLlJhbmdlU2xpZGVyXCIpXHJcbiAgICAgICAgICAgICAgICBsZXQgYmlhcyA9IChldi5jbGllbnRYIC0gbGluZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS54KS9saW5lLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLndpZHRoICogMTAwXHJcbiAgICAgICAgICAgICAgICBpZiAoIHR1bWJsZXIuY2xhc3NMaXN0LmNvbnRhaW5zKFwiUmFuZ2VTbGlkZXJfX3R1bWJsZXJfdHlwZV9tYWluXCIpICl7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy50dW1ibGVyU2hpZnRlZCh7c3RhcnRQcmM6IGJpYXN9KVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSh0aGlzLnR1bWJsZXJTaGlmdGVkKHtlbmRQcmM6IGJpYXMgfSkgKVxyXG4gICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZG9jdW1lbnQub25tb3VzZXVwID0gZT0+e1xyXG4gICAgICAgICAgICAgICAgcm9vdC5vbm1vdXNlbW92ZSA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5vbm1vdXNldXAgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJlbmRlcigpOiBIVE1MRWxlbWVudHtcclxuICAgICAgICAgICAgdGhpcy5yb290LmlubmVySFRNTCA9IGA8ZGl2IGNsYXNzPSdSYW5nZVNsaWRlciBSYW5nZVNsaWRlcl9vcmllbnRfJHt0aGlzLm9yaWVudH0nPjxkaXYgY2xhc3M9J1JhbmdlU2xpZGVyX19saW5lJz4gICA8c3BhbiBvbmRyYWdzdGFydD1cInJldHVybiBmYWxzZTtcIiBvbmRyb3A9XCJyZXR1cm4gZmFsc2U7XCIgY2xhc3M9J1JhbmdlU2xpZGVyX190dW1ibGVyX3R5cGVfbWFpbiBSYW5nZVNsaWRlcl9fdHVtYmxlcic+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4gPHNwYW4gb25kcmFnc3RhcnQ9XCJyZXR1cm4gZmFsc2U7XCIgb25kcm9wPVwicmV0dXJuIGZhbHNlO1wiIGNsYXNzPSdSYW5nZVNsaWRlcl9fdHVtYmxlcic+PC9zcGFuPiAgIDwvZGl2PiAgPGRpdiBjbGFzcz0nUmFuZ2VTbGlkZXJfX21lYW5pbmcnPjwvZGl2PiA8L2Rpdj48L2Rpdj5gO1xyXG4gICAgICAgICAgICB0aGlzLnJvb3QucXVlcnlTZWxlY3RvckFsbChcIi5SYW5nZVNsaWRlcl9fdHVtYmxlclwiKS5mb3JFYWNoKGVsPT57IFxyXG4gICAgICAgICAgICAgICAgbGV0IGVsZW0gPSAoZWwgYXMgSFRNTEVsZW1lbnQpXHJcbiAgICAgICAgICAgICAgICBlbGVtLnN0eWxlLmhlaWdodCA9IHRoaXMudHVtYmxlci50dW1ibGVyU2l6ZSBcclxuICAgICAgICAgICAgICAgIGVsZW0uc3R5bGUud2lkdGggPSB0aGlzLnR1bWJsZXIudHVtYmxlclNpemUgXHJcbiAgICAgICAgICAgICAgICBlbGVtLnN0eWxlLmJhY2tncm91bmQgPSB0aGlzLnR1bWJsZXIudHVtYmxlckJhY2tncm91bmRcclxuICAgICAgICAgICAgICAgIGVsZW0uc3R5bGUuYm9yZGVyUmFkaXVzID0gdGhpcy50dW1ibGVyLnR1bWJsZXJSYWRpdXNcclxuICAgICAgICAgICAgICAgIGVsZW0uc3R5bGUudHJhbnNmb3JtID0gXCJ0cmFuc2xhdGVYKC01MCUpXCJcclxuICAgICAgICAgICAgICAgIGVsZW0uc3R5bGUubWFyZ2luVG9wID0gIGBjYWxjKCgtJHt0aGlzLnR1bWJsZXIudHVtYmxlclNpemV9ICsgJHt0aGlzLmxpbmUubGluZUhlaWdodH0pLzIpYFxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGVsZW0ub25tb3VzZWRvd24gPSB0aGlzLnR1bWJsZXJMaXN0ZW5lci5iaW5kKHRoaXMpXHJcbiAgICAgICAgICAgIH0gKTtcclxuICAgICAgICAgICAgbGV0IGxpbmUgPSByb290LnF1ZXJ5U2VsZWN0b3IoXCIuUmFuZ2VTbGlkZXJfX2xpbmVcIikgYXMgSFRNTEVsZW1lbnRcclxuICAgICAgICAgICAgbGluZS5zdHlsZS5oZWlnaHQgPSB0aGlzLmxpbmUubGluZUhlaWdodFxyXG4gICAgICAgICAgICBsaW5lLnN0eWxlLmJhY2tncm91bmQgPSB0aGlzLmxpbmUubGluZUJhY2tncm91bmRcclxuICAgICAgICAgICAgbGluZS5zdHlsZS5ib3JkZXJSYWRpdXMgPSB0aGlzLmxpbmUubGluZVJhZGl1c1xyXG5cclxuICAgICAgICAgICAgdGhpcy52aWV3VXBkYXRlKDEwMC90aGlzLnJhbmdlICogdGhpcy5zdGFydCwgMTAwL3RoaXMucmFuZ2UgKiB0aGlzLmVuZClcclxuICAgICAgICAgICAgcmV0dXJuIHJvb3QucXVlcnlTZWxlY3RvcihcIi5SYW5nZVNsaWRlclwiKVxyXG4gICAgICAgIH1cclxuICAgICAgICB2aWV3VXBkYXRlKGZpclBvczpudW1iZXIsIHNlY1BvczpudW1iZXIpeyBcclxuICAgICAgICAgICAgKHRoaXMucm9vdC5xdWVyeVNlbGVjdG9yKFwiLlJhbmdlU2xpZGVyX190dW1ibGVyX3R5cGVfbWFpblwiKSBhcyBIVE1MRWxlbWVudCkuc3R5bGUubGVmdCA9IGZpclBvcyArIFwiJVwiO1xyXG4gICAgICAgICAgICAodGhpcy5yb290LnF1ZXJ5U2VsZWN0b3IoXCIuUmFuZ2VTbGlkZXJfX3R1bWJsZXI6bGFzdC1jaGlsZFwiKSBhcyBIVE1MRWxlbWVudCkuc3R5bGUubGVmdCA9IHNlY1BvcyAgKyBcIiVcIlxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgY29uc3QgUmFuZ2VTbGlkZXIgPSB7IFxyXG5cclxuICAgICAgICBNb2RlbDogbmV3IGNsTW9kZWwob3B0aW9ucyksXHJcbiAgICAgICAgUHJlc2VudGVyOiBuZXcgQ2xQcmVzZW50ZXIoKSxcclxuICAgICAgICBWaWV3OiBuZXcgY2xWaWV3KG9wdGlvbnMpLFxyXG5cclxuICAgICAgICBpbml0OiBmdW5jdGlvbigpe1xyXG5cclxuICAgICAgICAgICAgdGhpcy5WaWV3LnR1bWJsZXJTaGlmdGVkID0gdGhpcy5QcmVzZW50ZXIuc2hpZnRSZWFjLmJpbmQodGhpcy5QcmVzZW50ZXIpXHJcbiAgICAgICAgICAgIHRoaXMuUHJlc2VudGVyLmNhbGxUb01vZGVsID0gdGhpcy5Nb2RlbC51cGRhdGUuYmluZCh0aGlzLk1vZGVsKVxyXG4gICAgICAgICAgICB0aGlzLk1vZGVsLnVwZGF0ZWQgPSB0aGlzLlByZXNlbnRlci51cGRhdGVSZWFjdC5iaW5kKHRoaXMuUHJlc2VudGVyKVxyXG4gICAgICAgICAgICB0aGlzLlByZXNlbnRlci5jYWxsVG9WaWV3ID0gdGhpcy5WaWV3LnZpZXdVcGRhdGUuYmluZCh0aGlzLlZpZXcpXHJcblxyXG4gICAgICAgICAgICB0aGlzLlZpZXcucmVuZGVyKCkgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2V0VmFsdWUoKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYFNlbGVjdGVkIHJhbmdlOiAke3RoaXMuTW9kZWwudmFsdWVbMF19IOKAlCAke3RoaXMuTW9kZWwudmFsdWVbMV19YClcclxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuTW9kZWwudmFsdWVcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldFZhbHVlKHN0YXJ0Om51bWJlciwgZW5kOm51bWJlcil7XHJcbiAgICAgICAgICAgIHRoaXMuUHJlc2VudGVyLnNoaWZ0UmVhYyh7c3RhcnRQcmM6IHN0YXJ0L3RoaXMuTW9kZWwucmFuZ2UgKiAxMDAsIGVuZFByYzogZW5kL3RoaXMuTW9kZWwucmFuZ2UqMTAwLCBkaXJlY3Q6IHRydWV9KVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9LFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIFJhbmdlU2xpZGVyXHJcbiAgICBcclxufVxyXG5sZXQgZWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud3JhcHBlcj5kaXZcIilcclxubGV0IHNsaWRlciA9IENyZWF0ZVNsaWRlci5jYWxsKGVsZW0sIHt0eXBlOiBcInJhbmdlXCIsc3RhcnQ6MjAsIGVuZCA6IDgwLCBzdGVwOiA1fSApXHJcblxyXG5zbGlkZXIuaW5pdCgpXHJcblxyXG5zbGlkZXIuZ2V0VmFsdWUoKVxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9